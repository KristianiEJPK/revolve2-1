:py:mod:`v2`
===============================

.. py:module:: modular_robot.body.v2

.. autoapi-nested-parse::

   Explicit modules of V2 Robot.



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   modular_robot.body.v2.ActiveHingeV2
   modular_robot.body.v2.BodyV2
   modular_robot.body.v2.BrickV2
   modular_robot.body.v2.CoreV2




.. py:class:: ActiveHingeV2(rotation: float | modular_robot.body._right_angles.RightAngles)


   Bases: :py:obj:`modular_robot.body.base.ActiveHinge`

   .. autoapi-inheritance-diagram:: modular_robot.body.v2.ActiveHingeV2
      :parts: 1

   An active hinge module for a modular robot.

   This is a rotary joint.


.. py:class:: BodyV2


   Bases: :py:obj:`modular_robot.body.base._body.Body`

   .. autoapi-inheritance-diagram:: modular_robot.body.v2.BodyV2
      :parts: 1

   Body of a V1 modular robot.

   .. py:property:: core_v2
      :type: modular_robot.body.v2._core_v2.CoreV2

      Get the specific v2 core of the body.

      :return: The v2 core.



.. py:class:: BrickV2(rotation: float | modular_robot.body._right_angles.RightAngles)


   Bases: :py:obj:`modular_robot.body.base.Brick`

   .. autoapi-inheritance-diagram:: modular_robot.body.v2.BrickV2
      :parts: 1

   A brick module for a modular robot.


.. py:class:: CoreV2(rotation: float | modular_robot.body._right_angles.RightAngles, num_batteries: int = 1)


   Bases: :py:obj:`modular_robot.body.base.Core`

   .. autoapi-inheritance-diagram:: modular_robot.body.v2.CoreV2
      :parts: 1

   The core module of a modular robot.

   .. py:property:: front_face
      :type: modular_robot.body.v2._attachment_face_core_v2.AttachmentFaceCoreV2

      Get the face attached to the front of the core.

      :returns: The attached module.


   .. py:property:: right_face
      :type: modular_robot.body.v2._attachment_face_core_v2.AttachmentFaceCoreV2

      Get the face attached to the right of the core.

      :returns: The attached module.


   .. py:property:: back_face
      :type: modular_robot.body.v2._attachment_face_core_v2.AttachmentFaceCoreV2

      Get the face attached to the back of the core.

      :returns: The attached module.


   .. py:property:: left_face
      :type: modular_robot.body.v2._attachment_face_core_v2.AttachmentFaceCoreV2

      Get the face attached to the left of the core.

      :returns: The attached module.


   .. py:property:: horizontal_offset
      :type: float

      Get the horizontal offset for attachment positions (in m).

      :return: The value.


   .. py:property:: vertical_offset
      :type: float

      Get the vertical offset for attachment positions (in m).

      :return: The value.


   .. py:property:: attachment_faces
      :type: dict[int, modular_robot.body.v2._attachment_face_core_v2.AttachmentFaceCoreV2]

      Get all attachment faces for the Core.

      :return: The attachment faces.


   .. py:attribute:: mass

      Here we produce the attachment faces, with the advanced logic behind conflict checking.



